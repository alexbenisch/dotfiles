

# ~~~~~~~~~~~~~~~ Environment Variables ~~~~~~~~~~~~~~~~~~~~~~~~

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='nvim'
 fi
# Set to superior editing mode

set -o vi

export VISUAL=nvim
export EDITOR=nvim
export TERM="tmux-256color"

export BROWSER="google-chrome-stable"

# Directories

export REPOS="$HOME/repos"
export GITUSER="alexbenisch"
export GHREPOS="$REPOS/github.com/$GITUSER"
export DOTFILES="$GHREPOS/dotfiles"
export SCRIPTS="$DOTFILES/scripts"
export NEXTCLOUD="$HOME/Nextcloud/"
export GNUPGHOME="~/.gnupg/"
#GPG_TTY=$(tty)
#export GPG_TTY
unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
  export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
fi
export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null
#alias conflicts="systemctl --type=service"
alias devpod="devpod-cli"
export PATH="${PATH}:/home/alex/bin"
# (optional, aber sinnvoll beim Debuggen oder Testen)
[[ -f ~/.zshenv ]] && source ~/.zshenv

# ~~~~~~~~~~~~~~~ Keybindings ~~~~~~~~~~~~~~~~~~~~~~~~

bindkey '^A' beginning-of-line  # Ctrl + A springt zum Zeilenanfang
bindkey '^E' end-of-line        # Ctrl + E springt zum Zeilenende
bindkey '^K' kill-line          # Ctrl + K löscht von Cursor bis Zeilenende
bindkey '^U' backward-kill-line # Ctrl + U löscht die gesamte Zeile
bindkey '^R' fzf-history-widget


# ~~~~~~~~~~~~~~~ Mise ~~~~~~~~~~~~~~~~~~~~~~~~

if command -v mise > /dev/null ; then
  eval "$($HOME/.local/bin/mise activate zsh)"
fi

# ~~~~~~~~~~~~~~~ Path configuration ~~~~~~~~~~~~~~~~~~~~~~~~

setopt extended_glob null_glob
# Mit setzt du eine flexiblere Dateisuche und vermeidest unerwartete Zeichenketten,
# wenn keine Dateien gefunden werden. Ideal für Skripte und effizientes Arbeiten in der Shell.

path=(
    $path                           # Keep existing PATH entries
    $HOME/bin
    $HOME/.local/bin
    $SCRIPTS
)

# Remove duplicate entries and non-existent directories
typeset -U path
path=($^path(N-/))

export PATH

# ~~~~~~~~~~~~~~~ History ~~~~~~~~~~~~~~~~~~~~~~~~

HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

setopt HIST_IGNORE_SPACE  # Don't save when prefixed with space
setopt HIST_IGNORE_DUPS   # Don't save duplicate lines
setopt SHARE_HISTORY      # Share history between sessions

# FZF für History-Suche aktivieren
if command -v fzf >/dev/null 2>&1; then
  bindkey '^R' fzf-history-widget
fi

# ~~~~~~~~~~~~~~~ Prompt ~~~~~~~~~~~~~~~~~~~~~~~~
PURE_GIT_PULL=0

fpath+=($HOME/.zsh/pure)
# .zshrc
autoload -U promptinit; promptinit
prompt pure
# ~~~~~~~~~~~~~~~ Aliases ~~~~~~~~~~~~~~~~~~~~~~~~
if command -v bat > /dev/null ; then
  alias cat="bat"
fi
if command -v lsd > /dev/null ; then
  alias ls="lsd"
  alias ll="ls -lgh"
  alias la='ls -lathr'
  alias lla='ls -lgha'
  alias lt='ls --tree'
fi

# Git

alias gp='git pull'
alias gs='git status'
alias lg='lazygit'

# Kubernetes

alias k='kubectl'

alias kgp='kubectl get pods'
alias kc='kubectx'
alias kn='kubens'

alias fgk='flux get kustomizations'

# Pass

alias pc='pass show -c'

# Devpod

alias ds='devpod ssh'

# Bluetooth

# Airpods Max
alias btm='bluetoothctl connect 08:FF:44:0E:EA:D6'

# Airpods
alias bta='bluetoothctl connect 08:65:18:78:BD:A6'

# Befehl Logdatei mit besserer Strukturierung wie in der vorherigen Funktion:
alias lf='function _command_log() { 
    local cmd="$*"
    local timestamp=$(date "+%Y-%m-%d_%H:%M:%S")
    local logfile="logfile.log"
    
    {
        echo ""
        echo "# [$timestamp] Command: $cmd"
        echo "# ----------------------------------------"
        eval "$cmd"
        echo "# [$timestamp] Command completed"
        echo "# ========================================"
    } >> "$logfile"
    
    echo "Command logged: $cmd"
}; _command_log'
# ~~~~~~~~~~~~~~~ Environment Variables ~~~~~~~~~~~~~~~~~~~~~~~~



# ~~~~~~~~~~~~~~~ Completion ~~~~~~~~~~~~~~~~~~~~~~~~


fpath+=~/.zfunc

autoload -Uz compinit
compinit -u

zstyle ':completion:*' menu select

if command -v fzf > /dev/null ; then
  source <(fzf --zsh)
fi

if command -v k3d > /dev/null ; then
  source <(k3d completion zsh)
fi

if command -v kubectl > /dev/null ; then
  source <(kubectl completion zsh)
fi

if command -v flux > /dev/null ; then
  source <(flux completion zsh)
fi

if command -v mise > /dev/null ; then
  source <(mise completion zsh)
fi


# ~~~~~~~~~~~~~~~ Sourcing ~~~~~~~~~~~~~~~~~~~~~~~~


#if command -v direnv > /dev/null ; then
#  eval "$(direnv hook zsh)"
#fi

source <(fzf --zsh)

#eval "$(direnv hook zsh)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# ~~~~~~~~~~~~~~~ Misc ~~~~~~~~~~~~~~~~~~~~~~~~



#fpath+=~/.zfunc; autoload -Uz compinit; compinit









